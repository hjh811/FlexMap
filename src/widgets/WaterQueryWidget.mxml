<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2010 ESRI
//
// All rights reserved under the copyright laws of the United States.
// You may freely redistribute and use this software, with or
// without modification, provided you include the original copyright
// and use restrictions.  See use restrictions in the file:
// <install location>/License.txt
//
////////////////////////////////////////////////////////////////////////////////
-->
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*"
				   x="600" y="300"
				   layout="absolute"
				   widgetConfigLoaded="init()">
	
	<viewer:states>
		<s:State name="waterQuery"/>
		<s:State name="rainQuery"/>
	</viewer:states>
	
	<viewer:transitions>
		<s:Transition autoReverse="true" toState="*">
			<s:Fade targets="{[waterQuery, rainQuery]}"/>
		</s:Transition>
	</viewer:transitions>
	
	<fx:Script>
		<![CDATA[
			import com.esri.ags.geometry.Extent;
			import mx.collections.ArrayList;
			import mx.collections.IList;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.EffectEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;
			
			import spark.components.supportClasses.ItemRenderer;
			import spark.core.NavigationUnit;
			private const ICON_URL:String = "assets/images/";
			
			//labels
			[Bindable]
			private var waterQueryLabel:String;
			[Bindable]
			private var rainQueryLabel:String;
			private var selectedindex:int = 0;
			[Bindable]
			private var locationsXML:IList = null
			private function init():void
			{
				if (configXML)
				{
					waterQueryLabel = configXML.labels.waterquerylabel;
					rainQueryLabel = configXML.labels.rainquerylabel;
					locationsXML = new XMLListCollection(configXML..location);
				}
				wTemplate.addTitlebarButton(ICON_URL + "i_searchgraphical.png", rainQueryLabel, showBookmarkAdd);
				wTemplate.addTitlebarButton(ICON_URL + "i_search.png", waterQueryLabel, showBookmarksList);
				showBookmarkAdd();
			}
			
			private function showBookmarksList():void
			{
				this.currentState = "waterQuery";
				 // used to indicate selected titlebar button when automatically switching state
			}
			
			private function showBookmarkAdd():void
			{
				this.currentState = "rainQuery";
				wTemplate.selectedTitlebarButtonIndex = 0;
			}
			
			private function loadBookmarks():void
			{
			
			}
			
			private function addBookmark():void
			{
	
			}
			
			private function bkmList_effectEndHandler(event:EffectEvent):void
			{
				
			}
			
			private function removeBookmark(event:Event):void
			{
		
			}
			
			private function saveBookmarks():void
			{

			}
			
			private function showBookmark(event:Event):void
			{
				
			}

			protected function rainCurrentQuery(event:MouseEvent):void
			{
				var webservice:WebService = new WebService();
				webservice.wsdl = "http://10.23.108.90:7003/wdc_webservice/services/gzdata?wsdl";
				webservice.loadWSDL();   
				webservice.addEventListener(ResultEvent.RESULT, completeHandler);
				webservice.addEventListener(FaultEvent.FAULT,falseHandler);
				var str:String="<?xml version='1.0' encoding='gb2312'?>";
				str+="<applyForm><tableName>QU379</tableName>";
				str+="<size>10</size>";
				str+="<pageno>1</pageno>";
				str+="<condition>";
				//str+="<column name='TB_YBSINFO_CZMC' oper='like'>铜锣湾";
				//str+="</column>";
				str+="</condition>";
				str+="</applyForm>";
				webservice.downXmlData(str);
				//<?xml version='1.0' encoding='gb2312'?><applyForm><tableName>QU379</tableName><size>10</size><pageno>1</pageno><condition></condition></applyForm>
			}

			private function completeHandler(event:ResultEvent):void
			{
				
				var xml:XML = XML(event.result.toString());
				var xmllist:XMLList = xml.row;
				rainDatagrid.dataProvider = xmllist;
//				for each(var row:XML in xmllist)
//				{
//					break;
//				}
			}
			
			private function falseHandler(event:FaultEvent):void
			{
				Alert.show("水位雨情服务有误");
			}
			
			private function rainHistoryQuery(event):void
			{
//				var waterRainWindow:WaterRainHistoryQuery = WaterRainHistoryQuery(PopUpManager.createPopUp(this.parentApplication.parent,WaterRainHistoryQuery,false));
//				PopUpManager.centerPopUp(waterRainWindow);
			}
		]]>
	</fx:Script>
	
	<viewer:WidgetTemplate id="wTemplate"
						   width="400" height="300">

		<s:Group id="rainQuery"
				 width="100%" height="100%"
				 visible="false"  
				 visible.rainQuery="true">
			<s:layout>
			<s:VerticalLayout gap="3"
			horizontalAlign="center"
			paddingTop="5"/>
			</s:layout>
			<s:HGroup width="100%" height="35" verticalAlign="middle">
				<s:Label includeIn="rainQuery" text="测站"/>
				<s:DropDownList width="100" dataProvider="{locationsXML}" labelField="@name" requireSelection="true">
				
				</s:DropDownList>
				<mx:Button includeIn="rainQuery" label="实时查询" click="rainCurrentQuery(event)"/>
				<mx:Button includeIn="rainQuery" label="历史查询"  click="rainHistoryQuery(event)"/>
			</s:HGroup>
			<mx:DataGrid id="rainDatagrid" includeIn="rainQuery" width="100%" height="100%">
				<mx:columns>
					<mx:DataGridColumn headerText="测站名称" dataField="TB_YBSINFO_CZMC"/>
					<mx:DataGridColumn headerText="实时水位" dataField="U_ST_RLWT_RTLV"/>
					<mx:DataGridColumn headerText="来报时间" dataField="U_ST_RLWT_INMSGTM"/>
				</mx:columns>
			</mx:DataGrid>
			<!--<s:HGroup width="100%" height="35" verticalAlign="middle">
				<s:Label text="时间"/>
				<mx:DateField  includeIn="rainQuery" selectedDate="{new Date()}" formatString="YYYY-MM-DD"/>
				<s:Label text="至"/>
				<mx:DateField includeIn="rainQuery" selectedDate="{new Date()}" formatString="YYYY-MM-DD"/>
			</s:HGroup>
			<s:HGroup width="100%" height="100%" verticalAlign="middle">

			</s:HGroup>-->
		</s:Group>
		<s:Group id="waterQuery"
				 width="100%" height="100%"
				 visible="false" 
				 visible.waterQuery="true">
			<!-- <s:Scroller width="100%" height="100%">
			<Bookmark:BookmarkDataGroup id="bookmarkDG"
			bookmarkClick="showBookmark(event)"
			bookmarkDelete="removeBookmark(event)"
			dataProvider="{bookmarkAL}">
			<Bookmark:layout>
			<s:VerticalLayout gap="2"
			horizontalAlign="justify"
			useVirtualLayout="true"/>
			</Bookmark:layout>
			</Bookmark:BookmarkDataGroup>
			</s:Scroller>-->
		</s:Group>
	</viewer:WidgetTemplate>
</viewer:BaseWidget>